{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["let init = false;\r\nlet swiper;\r\nlet spinner = false;\r\nlet userPrefernce = {\r\n    size: \"1000 x 1000\",\r\n    option: \"standart\",\r\n    assembly: true,\r\n    price: \"100000\"\r\n};\r\n\r\nfunction initSlider() {\r\n    const breakPoint = window.matchMedia(\"(max-width: 1280px)\");\r\n\r\n    if (breakPoint.matches && !init) {\r\n        swiper = new Swiper(\".sauna-hero__slider\", {\r\n            loop: true,\r\n            speed: 700,\r\n            autoplay: {\r\n                delay: 5000,\r\n            }\r\n        });\r\n        init = true;\r\n    }\r\n\r\n    if (init && !breakPoint.matches) {\r\n        init = false;\r\n        swiper.destroy();\r\n    }\r\n}\r\n\r\nfunction chosePreference(value, key) {\r\n    userPrefernce[key] = value;\r\n    updateInput(userPrefernce);\r\n}\r\n\r\nfunction tabs(tabsControlsSelectors, tabsContentsSelectors, bound, preferenced, disabled) {\r\n    const tabsControls = document.querySelectorAll(tabsControlsSelectors);\r\n    const tabsContents = document.querySelectorAll(tabsContentsSelectors);\r\n\r\n    tabsControls.forEach((control, i) => {\r\n        control.addEventListener(\"click\", () => {\r\n            if (control.classList.contains(disabled)) {\r\n                return;\r\n            }\r\n\r\n            cleanFromActive();\r\n    \r\n            control.classList.add(\"active\");\r\n            if (preferenced) {\r\n                const option = control.getAttribute(\"data-sauna-option\");\r\n                chosePreference(option, \"option\");\r\n            }\r\n\r\n            if (!bound) {\r\n                tabsContents[i].classList.add(\"active\");\r\n            } else {\r\n                bountTabs(i);\r\n            }\r\n        });\r\n    });\r\n\r\n    function cleanFromActive() {\r\n        tabsControls.forEach(item => {\r\n            item.classList.remove(\"active\");\r\n        });\r\n\r\n        tabsContents.forEach(item => {\r\n            item.classList.remove(\"active\");\r\n        });\r\n    }\r\n\r\n    function bountTabs(i) {\r\n        const boundFirstControls = document.querySelectorAll(\".sauna-promo__tabs .sauna-tabs__control\");\r\n        const boundFirstContents = document.querySelectorAll(\".sauna-promo__tabs .sauna-tabs__gallery-item\");\r\n        const boundedControls = document.querySelectorAll(\".sauna-estimate__tabs .sauna-tabs__control\");\r\n        const boundedContents = document.querySelectorAll(\".sauna-estimate__tabs .sauna-tabs__item\");\r\n\r\n        clean(boundFirstControls);\r\n        clean(boundFirstContents);\r\n        clean(boundedControls);\r\n        clean(boundedContents);\r\n\r\n        boundFirstControls[i].classList.add(\"active\"); \r\n        boundFirstContents[i].classList.add(\"active\"); \r\n        boundedControls[i].classList.add(\"active\"); \r\n        boundedContents[i].classList.add(\"active\");\r\n\r\n        function clean(items) {\r\n            items.forEach(item => {\r\n                item.classList.remove(\"active\");\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction initTabSliders(mainsliderSelectors, thumbsliderSelectors, thumbBtnPrev, thumbBtnNext) {\r\n    const galleryThumbs = new Swiper(mainsliderSelectors, {\r\n        spaceBetween: 17,\r\n        slidesPerView: 4,\r\n        freeMode: true,\r\n        watchSlidesVisibility: true,\r\n        watchSlidesProgress: true,\r\n        navigation: {\r\n            prevEl: thumbBtnPrev,\r\n            nextEl: thumbBtnNext\r\n        },\r\n        breakpoints: {\r\n            1200: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 8,\r\n            }\r\n        }\r\n    });\r\n\r\n    const standartSliderTop = new Swiper(thumbsliderSelectors, {\r\n        spaceBetween: 10,\r\n        thumbs: {\r\n            swiper: galleryThumbs,\r\n        }\r\n    });\r\n}\r\n\r\nfunction toggleAllEstim(allshowTriggers) {\r\n    const allTriggers = document.querySelectorAll(allshowTriggers);\r\n\r\n    allTriggers.forEach(trigger => {\r\n        trigger.addEventListener(\"click\", () => {\r\n            const togglableElements = document.querySelectorAll(\"[data-sauna-togglable]\");\r\n\r\n            if (trigger.classList.contains(\"estimate__show-estim--disable\")) {\r\n                togglableElements.forEach(item => item.classList.add(\"estimate__service--hide\"));\r\n                togglableElements.forEach(item => {\r\n                    if (!item.dataset.lastMaterial) {\r\n                        console.log(\"hiden ?\");\r\n                        item.classList.add(\"estimate__service--hide\");\r\n                    }\r\n                });\r\n\r\n                allTriggers.forEach(item => item.classList.remove(\"estimate__show-estim--disable\"))\r\n            } else {\r\n                togglableElements.forEach(item => item.classList.remove(\"estimate__service--hide\"));\r\n                allTriggers.forEach(item => item.classList.add(\"estimate__show-estim--disable\"))\r\n                togglableElements.forEach(item => {\r\n                    if (!item.dataset.lastMaterial) {\r\n                        item.classList.remove(\"estimate__service--hide\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction scrollTo(element) {\r\n    const cords = element.getBoundingClientRect().top + window.pageYOffset - 40;\r\n    window.scroll({\r\n        behavior: 'smooth',\r\n        left: 0,\r\n        top: cords\r\n    });\r\n}\r\n\r\nfunction showNeededData() {\r\n    const allRadio = document.querySelectorAll(\".sauna-chose__radio\");\r\n    const scrollAnchor = document.querySelector(\".sauna-estimate__tabs\");\r\n\r\n    function retrieveData(data, key) {\r\n        const found = data.find(elem => elem.name === key);\r\n        return found;\r\n    }\r\n\r\n    function changePrices(data, option) {\r\n        const priceWrapper = document.querySelector(`[data-option=\"${option}\"]`);\r\n        const priceItem = priceWrapper.querySelectorAll(\".sauna-option__price > span\");\r\n\r\n        priceItem.forEach((price, i) => {\r\n            price.textContent = data[i];\r\n        });\r\n    }\r\n\r\n    function changeSizes(size, model) {\r\n        const sizesElems = document.querySelectorAll(\".estimate__sauna-size\");\r\n        const modelElems = document.querySelectorAll(\".estimate__sauna-model\");\r\n\r\n        sizesElems.forEach(item => {\r\n            item.textContent = size;\r\n        });\r\n\r\n        modelElems.forEach(item => {\r\n            item.textContent = \"x \" + model;\r\n        });\r\n    }\r\n\r\n    function changeOptions(data, option) {\r\n        let parentEl;\r\n        if (option === \"stdSaunas\") {\r\n            parentEl = document.querySelector(\".sauna-tabs__item--std\");\r\n        } else if (option === \"cmfSaunas\") {\r\n            parentEl = document.querySelector(\".sauna-tabs__item--cmf\");\r\n        } else if (option === \"prmSaunas\") {\r\n            parentEl = document.querySelector(\".sauna-tabs__item--prm\");\r\n        }\r\n        \r\n        data.forEach((item, i) => {\r\n            const tabContent = parentEl.querySelectorAll(\".estimate__tab-content\");\r\n            const newItem = document.createElement(\"div\");\r\n            newItem.classList.add(\"estimate__service\");\r\n\r\n            newItem.innerHTML = `\r\n                <div class=\"estimate__key\">\r\n                    ${item.key}\r\n                </div>\r\n                <div class=\"estimate__hyphens\"></div>\r\n                <div class=\"estimate__value\">\r\n                    ${item.value}\r\n                </div>\r\n            `;\r\n\r\n            if (item.type === \"materials\") {\r\n                // materialCount++;\r\n\r\n                // if (materialCount > 6) {\r\n                //     newItem.classList.add(\"estimate__service--hide\");\r\n                //     newItem.dataset.saunaTogglable = \"true\";\r\n                // }\r\n\r\n                tabContent[0].append(newItem);\r\n            } else {\r\n                // assemblyCount++;\r\n\r\n                // if (assemblyCount > 5) {\r\n                //     newItem.classList.add(\"estimate__service--hide\");\r\n                //     newItem.dataset.saunaTogglable = \"true\";\r\n                // }\r\n\r\n                tabContent[1].append(newItem);\r\n            }\r\n        });\r\n    }\r\n\r\n    function toggleSpinner(toggler) {\r\n        const spinner = document.querySelector(\".sauna-tabs__loader\");\r\n        if (toggler) {\r\n            spinner.classList.add(\"active\");\r\n        } else {\r\n            spinner.classList.remove(\"active\");\r\n        }\r\n    }\r\n\r\n    function changeData(data) {\r\n        const tabContent = document.querySelectorAll(\".estimate__tab-content\");\r\n        tabContent.forEach(item => {\r\n            item.innerHTML = \"\";\r\n        });\r\n\r\n        for (const key of Object.keys(data)) {\r\n            if (key === \"stdPrice\" || key === \"cmfPrice\" || key === \"prmPrice\") {\r\n                changePrices(data[key], key);\r\n            } else if (key === \"stdSaunas\" || key === \"cmfSaunas\" || key === \"prmSaunas\") {\r\n                changeOptions(data[key], key);\r\n            }\r\n        }\r\n    }\r\n\r\n    allRadio.forEach(item => {\r\n        item.addEventListener(\"change\", () => {\r\n            const data = retrieveData(saunaData, item.id);\r\n\r\n            if (data && data.length !== 0) {\r\n                toggleSpinner(true);\r\n                scrollTo(scrollAnchor);\r\n                setTimeout(() => {\r\n                    changeData(data);\r\n                }, 100)\r\n\r\n                setTimeout(() => {\r\n                    const prom = new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                            ifNotExtra();\r\n                            resolve();\r\n                        });\r\n                    }).then(() => {\r\n                        hideExtraOptions();\r\n                        markAllLastMaterial();\r\n                    });\r\n                }, 400);\r\n\r\n                setTimeout(() => {\r\n                    ifNotExtra();\r\n                    changeSizes(data.sizes, data.model);\r\n                    chosePreference(data.sizes, \"size\");\r\n                    toggleSpinner(false);\r\n                }, 1000);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction choseAssembly() {\r\n    function toggleAssemblyTab(flag) {\r\n        const allTabTriggers = document.querySelectorAll(\".estimate__control--assembly\");\r\n        const allLastMaterial = document.querySelectorAll(\"[data-last-material]\");\r\n\r\n        allTabTriggers.forEach(item => {\r\n            if (flag) {\r\n                item.classList.remove(\"estimate__control--hide\");\r\n\r\n                allLastMaterial.forEach(item => {\r\n                    item.classList.remove(\"estimate__service--hide\");\r\n                    item.removeAttribute(\"[data-last-material]\");\r\n                });\r\n            } else {\r\n                item.classList.add(\"estimate__control--hide\");\r\n\r\n                allLastMaterial.forEach(item => {\r\n                    if (!item.classList.contains(\"estimate__service--hide\")) {\r\n                        item.classList.add(\"estimate__service--hide\");\r\n                        item.setAttribute(\"data-last-material\", \"true\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const allItems = document.querySelectorAll(\"[data-assembly]\");\r\n\r\n    const withAssembly = Array.from(allItems).filter(item => {\r\n        return item.getAttribute(\"data-assembly\") === \"true\";\r\n    });\r\n\r\n    const withoutAssembly = Array.from(allItems).filter(item => {\r\n        return item.getAttribute(\"data-assembly\") === \"false\";\r\n    });\r\n\r\n    allItems.forEach(item => {\r\n        item.addEventListener(\"change\", () => {\r\n            const price = item.nextElementSibling.querySelector(\".sauna-option__price span\");\r\n            if (item.getAttribute(\"data-assembly\") === \"true\") {\r\n                withAssembly.map(item => item.checked = true);\r\n                withoutAssembly.map(item => item.checked = false);\r\n                toggleAssemblyTab(true);\r\n                chosePreference(true, \"assembly\");\r\n                chosePreference(price.textContent, \"price\");\r\n            } else {\r\n                withAssembly.map(item => item.checked = false);\r\n                withoutAssembly.map(item => item.checked = true);\r\n                toggleAssemblyTab(false);\r\n                chosePreference(false, \"assembly\");\r\n                chosePreference(price.textContent, \"price\");\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst hideExtraOptions = () => {\r\n    const optionsWrapper = document.querySelectorAll(\".estimate__tab-content\");\r\n    optionsWrapper.forEach(item => {\r\n        const optionsInWrapper = item.querySelectorAll(\".estimate__service\");\r\n        optionsInWrapper.forEach((item, i) => {\r\n            if (i >= 6) {\r\n                item.classList.add(\"estimate__service--hide\");\r\n                item.dataset.saunaTogglable = true;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction ifNotExtra() {\r\n    const optionsWrapper = document.querySelectorAll(\".estimate__tab-content\");\r\n    optionsWrapper.forEach(item => {\r\n        const parentOfWrapper = item.parentElement;\r\n        const trigger = parentOfWrapper.parentElement.querySelector(\".estimate__show-estim\");\r\n\r\n        if (parentOfWrapper.firstElementChild.children.length < 5 && parentOfWrapper.lastElementChild.children.length < 5) {\r\n            trigger.classList.add(\"estimate__show-estim--hide\");\r\n        } else {\r\n            trigger.classList.remove(\"estimate__show-estim--hide\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction markAllLastMaterial() {\r\n    const allWrappers = document.querySelectorAll(\".estimate__right\");\r\n\r\n    allWrappers.forEach(item => {\r\n        let notHided = Array.from(item.firstElementChild.children);\r\n        notHided = notHided.filter(item => !item.classList.contains(\"estimate__service--hide\"));\r\n        notHided[notHided.length - 1].dataset.lastMaterial = true;\r\n    });\r\n}\r\n\r\nfunction initiateScrollBtns() {\r\n    const allItems = document.querySelectorAll(\"[data-sauna-link]\");\r\n\r\n    allItems.forEach(item => {\r\n        item.addEventListener(\"click\", () => {\r\n            const scrollAnchor = document.querySelector(item.dataset.saunaLink);\r\n            scrollTo(scrollAnchor);\r\n        });\r\n    });\r\n}\r\n\r\nfunction addInputToForm () {\r\n    const input = document.createElement(\"input\");\r\n    const form = document.querySelector(\".sauna-form\");\r\n\r\n    input.setAttribute(\"type\", \"text\");\r\n    input.setAttribute(\"name\", \"user-prefernce\");\r\n    input.classList.add(\"sauna-form__hidden-input\")\r\n\r\n    form.append(input);\r\n}\r\n\r\nfunction updateInput({size, option, assembly, price}) {\r\n    const input = document.querySelector(\".sauna-form__hidden-input\");\r\n    input.setAttribute(\"value\",  `${size}/${option}/${assembly}/${price}`);\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // slider\r\n    initSlider();\r\n\r\n    markAllLastMaterial();\r\n\r\n    ifNotExtra();\r\n\r\n    tabs(\r\n        \".sauna-promo__tabs .sauna-tabs__control\",\r\n     \".sauna-promo__tabs .sauna-tabs__gallery-item\",\r\n     true,\r\n     true\r\n    );\r\n\r\n    tabs(\r\n        \".sauna-estimate__tabs .sauna-tabs__control\",\r\n     \".sauna-estimate__tabs .sauna-tabs__item\",\r\n     true,\r\n     true\r\n    );\r\n\r\n    tabs(\r\n        \".sauna-tabs__item--std .estimate__control\",\r\n        \".sauna-tabs__item--std .estimate__tab-content\",\r\n        false,\r\n        false,\r\n        \"estimate__control--hide\"\r\n    );\r\n\r\n    tabs(\r\n        \".sauna-tabs__item--cmf .estimate__control\",\r\n        \".sauna-tabs__item--cmf .estimate__tab-content\",\r\n        false,\r\n        false,\r\n        \"estimate__control--hide\"\r\n    );\r\n\r\n    tabs(\r\n        \".sauna-tabs__item--prm .estimate__control\",\r\n        \".sauna-tabs__item--prm .estimate__tab-content\",\r\n        false,\r\n        false,\r\n        \"estimate__control--hide\"\r\n    );\r\n\r\n    initTabSliders(\r\n        \".sauna-tabs__gallery-item--std .sauna-gallery__thumbs .swiper-container\",\r\n        \".sauna-tabs__gallery-item--std .sauna-gallery__preview\",\r\n        \".sauna-tabs__gallery-item--std .sauna-gallery__arrow--prev\",\r\n        \".sauna-tabs__gallery-item--std .sauna-gallery__arrow--next\"\r\n    );\r\n    initTabSliders(\r\n        \".sauna-tabs__gallery-item--cmf .sauna-gallery__thumbs .swiper-container\",\r\n        \".sauna-tabs__gallery-item--cmf .sauna-gallery__preview\",\r\n        \".sauna-tabs__gallery-item--cmf .sauna-gallery__arrow--prev\",\r\n        \".sauna-tabs__gallery-item--cmf .sauna-gallery__arrow--next\"\r\n    );\r\n    initTabSliders(\r\n        \".sauna-tabs__gallery-item--prem .sauna-gallery__thumbs .swiper-container\",\r\n        \".sauna-tabs__gallery-item--prem .sauna-gallery__preview\",\r\n        \".sauna-tabs__gallery-item--prem .sauna-gallery__arrow--prev\",\r\n        \".sauna-tabs__gallery-item--prem .sauna-gallery__arrow--next\"\r\n    );\r\n\r\n    const choseSaunaSlider = new Swiper(\".sauna-chose__slider\", {\r\n        slidesPerView: 5,\r\n        spaceBetween: 22,\r\n        navigation: {\r\n            prevEl: \".sauna-chose__arrow--prev\",\r\n            nextEl: \".sauna-chose__arrow--next\"\r\n        },\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1,\r\n            },\r\n            576: {\r\n                slidesPerView: 1,\r\n            },\r\n            768: {\r\n                slidesPerView: 2,\r\n            },\r\n            992: {\r\n                slidesPerView: 3,\r\n            },\r\n            1315: {\r\n                slidesPerView: 4,\r\n            },\r\n            1400: {\r\n                slidesPerView: 5\r\n            }\r\n        }\r\n    });\r\n\r\n    toggleAllEstim(\".estimate__show-estim\");\r\n    showNeededData();\r\n\r\n    const spaSlider = new Swiper(\".sauna-our-works__slider\", {\r\n        slidesPerView: 2,\r\n        spaceBetween: 20,\r\n        pagination: {\r\n            el: \".sauna-our-works__pagination\",\r\n            type: \"progressbar\",\r\n            modifierClass: \"\",\r\n            progressbarFillClass: \"sauna-our-works__paginaton-fill\"\r\n        },\r\n        breakpoints: {\r\n            800: {\r\n                slidesPerView: 1\r\n            },\r\n            1300: {\r\n                slidesPerView: 2,\r\n            }\r\n        }\r\n    });\r\n\r\n    choseAssembly();\r\n\r\n    hideExtraOptions();\r\n    initiateScrollBtns();\r\n    addInputToForm();\r\n    updateInput(userPrefernce);\r\n});\r\n\r\n\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    initSlider();\r\n});"],"file":"script.js"}